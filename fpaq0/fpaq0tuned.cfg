int cxt;  // Context: last 0-8 bits with a leading 1
int ct0[256]={};
int ct1[256]={};

int update(int y, int c0, int bpos, int c4) {
    if (y) ct1[cxt]=ct1[cxt]+1;
    else ct0[cxt]=ct0[cxt]+1;
    
    if (ct0[cxt] > 111 || ct1[cxt] > 111) {
      ct0[cxt]=ct0[cxt]>>1;
      ct1[cxt]=ct1[cxt]>>1;
    }
    cxt=cxt+cxt+y;
    if (cxt>= 256)    cxt=1;
    vmx(ST,0, (4096*(ct1[cxt]+1))/(ct0[cxt]+ct1[cxt]+2));
}

void block(int a,int b) { 
}

int main() { 
    cxt=1;
    vmi(ST,0,128,0,-1,0);
}